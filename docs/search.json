{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "author": [],
      "contents": "\nThis is a website (and github repository) of data and code for our work about impact of COVID on TB notifications in Blantyre Malawi.\nWe are the Malawi Liverpool Wellcome Population Health group; a group of reseachers affiliated with Malawi-Liverpool-Wellcome, Liverpool School of Tropical Medicine, London School of Hygiene and Tropical Medicine, College of Medicine at University of Malawi and University of Sheffield.\nThe TB electronic reporting system is a partnership between our group and Malawi National TB programme and Blantyre District Health Office.\nSome more information about our research group is available at Dr Peter MacPherson’s group manual here https://petermacp.github.io/mlw.public.health.group/ .\nMore data about TB epidemiology in Blantyre is here https://github.com/petermacp/BlantyreTBEpi (a companion package to the paper ‘MacPherson, P. et al. Disparities in access to diagnosis and care in Blantyre, Malawi, identified through enhanced tuberculosis surveillance and spatial analysis. BMC Medicine 17, 21 (2019). https://doi.org/10.1186/s12916-019-1260-6’ )\nIf you have any questions, we’d be happy to discuss. A good first port of call is probably peter.macpherson [at] lstmed [dot] ac [dot] uk or rachaelburke [at] lshtm [dot] ac [dot] uk.\n\n\n\n",
      "last_modified": "2021-03-09T12:30:34+02:00"
    },
    {
      "path": "Code.html",
      "title": "Code",
      "description": "Code for our Interrupted Time Series Analysis\n",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\n1. Load packages and data\n\n\n# Packages\nlibrary(MASS, exclude=\"select\") # for glm.nb\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(broom)\nlibrary(here)\nlibrary(gt) # make tables loook nice\nlibrary(stringr)\nlibrary(tsModel) #for including harmonic fx for seasonality\nlibrary(boot)\nlibrary(mice)\nlibrary(janitor) #for tabyl\nlibrary(zoo) #for na.approx (interpolate values of population when month treated continuously)\n\n# Load the data\n\ntb_data_group <- read_csv(here(\"data\",\"tb_data_group.csv\"))\n\nload(here(\"data/Pop_Age_Sex_HIV.rdata\")) # Blantyre census data disaggregated by age and sex (from world population prospects and modified by CCK)\ncens <- PopQ %>%\n  mutate(year_q=paste0(Year,\":\",Q)) %>%\n  mutate(yq=yq(year_q)) # yq is a date with 1st day of each quarter\n\nage_levels_10 <- c(\"0-14\",\"15-24\", \"25-34\", \"35-44\", \"45-54\", \"55-64\", \"65+\")\ncovid_date_m <- dmy(\"01 Apr 2020\") # date of COVID starting (whole month)\n\n\n\nDefine some functions for use later\n\n\n# These functions takes a model and makes predictions and puts them into a dataframe (including counterfactual no-COVID)\n\n# The first functions give a df containing one observation per month and predictions for all the levels contained in data plus a counterfactual \"no COVID\" time.  This is used for calculating expected cumlative numbers of TB cases / CNR (particularly in counterfactual months).\n\n# In second function month is not integer-coded but is continuous -- this is for plotting the graphs so that there is an instaneous effect of COVID (with integer-coded months the drop between March and April was a diagonal line on the graph connecting March and April 2020, which didn't make sense as we'd modelled an instaneneous drop)\n\nmodel2pred_pop <- function(df,m){ #incorporating a population term to give CNRs\n\nscaffold_df <- all %>% \n  select(month_num,covid) %>% \n  tidyr::expand(month_num,covid) %>% #makes predictions over every level that exists in the data\n  left_join(all%>%select(month,month_num,pop))\n\npred_obj <- predict(m, type=\"link\", newdata=scaffold_df, se.fit=T)\n\ndf1 <- scaffold_df %>%\n  left_join(all) %>%\n  rename(cases_actual=cases) %>%\n  rename(cnr_actual=cnr) %>%\n  mutate(cases_pred=(exp(pred_obj$fit))) %>%\n  mutate(cnr_pred=exp(\n    pred_obj$fit - log(pop)\n  ) * 100000 * 12) %>%\n  mutate(cases_low=(exp(pred_obj$fit - 1.96*pred_obj$se.fit))) %>%\n  mutate(cases_high=(exp(pred_obj$fit + 1.96*pred_obj$se.fit))) %>%\n  mutate(cnr_low=exp(\n    (pred_obj$fit - 1.96*pred_obj$se.fit) - log(pop)\n    )\n    *100000 * 12 ) %>%\n  mutate(cnr_high=exp(\n    (pred_obj$fit + 1.96*pred_obj$se.fit) - log(pop)\n    ) *100000 * 12) %>%\n  mutate(cases_se=pred_obj$se.fit) %>%\n  mutate(cases_link=pred_obj$fit) #need to have this on link scale to bootstrap later\n\ndf2 <- df1 %>%\n  mutate(irrelevant=case_when(\n    covid==1 & month_num < covid_month_num ~ T,\n    TRUE ~ F\n  )) %>%\n  filter(irrelevant!=T) %>%  #get rid of \"COVID\"=yes when time is before COVID (irrelevant predictions)\n  select(-irrelevant) %>%\n  mutate(c_fact=case_when(\n        covid==0 & month_num >= covid_month_num ~ T, #create a variable to indicate no-COVID by after COVID-time is counterfactual\n        T ~ F\n  ))\ndf2\n}\n\nmodel2pred_pop_continuous <- function(df,m){ #incorporating a population term to give CNRs\n\nseq <- seq(0,1, length=100) %>% tibble() # creates 100 data point between start and end month numbers (i.e. \"month num\" becomes nearly continuous)\n\nexpand_months <- all %>% \n  dplyr::select(month_num,covid) %>% \n  tidyr::expand(month_num,covid, seq$.) %>% # now includes 1000 extra points for each level of covid and month_num\n  mutate(month_num=`seq$.` + month_num) %>% # makes a 'continous' variable for month_num (have to keep name month_num so that plotting works as that's the variable name in model)\n  select(-`seq$.`)\n\nx <- all %>% select(month_num, month) # I need this to get actual months back, not just month_num\n\nexpand_pop <- expand_months %>% \n  left_join(all, by=c(\"month_num\")) %>%\n  select(month_num,covid.x, pop) %>%\n  rename(covid=covid.x)%>%\n  na.approx() %>% # from zoo package, linear interpolation of population between quarters (to match months now being effectively continuous)\n  na.locf() %>% \n  as.data.frame() %>%\n  left_join(x)\n\nscaffold_df_continuous <- expand_pop\n\npred_obj <- predict(m, type=\"link\", newdata=scaffold_df_continuous, se.fit=T)\n\ndf1 <- scaffold_df_continuous %>%\n  left_join(all) %>% # this brings calendar month back but only when COVID=\n  rename(cases_actual=cases) %>%\n  rename(cnr_actual=cnr) %>%\n  mutate(cases_pred=(exp(pred_obj$fit))) %>%\n  mutate(cnr_pred=exp(\n    pred_obj$fit - log(pop)\n  ) * 100000 * 12) %>%\n  mutate(cases_low=(exp(pred_obj$fit - 1.96*pred_obj$se.fit))) %>%\n  mutate(cases_high=(exp(pred_obj$fit + 1.96*pred_obj$se.fit))) %>%\n  mutate(cnr_low=exp(\n    (pred_obj$fit - 1.96*pred_obj$se.fit) - log(pop)\n    )\n    *100000 * 12 ) %>%\n  mutate(cnr_high=exp(\n    (pred_obj$fit + 1.96*pred_obj$se.fit) - log(pop)\n    ) *100000 * 12) %>%\n  mutate(cases_se=pred_obj$se.fit) %>%\n  mutate(cases_link=pred_obj$fit) #need to have this on link scale to bootstrap later\n\ndf2 <- df1 %>%\n  mutate(irrelevant=case_when(\n    covid==1 & month_num < covid_month_num ~ T,\n    TRUE ~ F\n  )) %>%\n  filter(irrelevant!=T) %>%  #get rid of \"COVID\"=yes when time is before COVID (irrelevant predictions)\n  select(-irrelevant) %>%\n  mutate(c_fact=case_when(\n        covid==0 & month_num >= covid_month_num ~ T, #create a variable to indicate no-COVID by after COVID-time is counterfactual\n        T ~ F\n  ))\ndf2\n}\n\n\nmodel2pred_by <- function(df,m){ \n\nscaffold_df <- df %>% \n  dplyr::filter(hiv!=\"unknown\") %>% \n  dplyr::filter(is.na(sex)==F) %>%\n  select(month_num,covid,fac,hiv,sex) %>% \n  tidyr::expand(month_num,covid,fac,hiv,sex) %>% #makes predictions over every level\n  left_join(by%>%select(month,month_num)%>%distinct())\n\npred_obj <- predict(m, type=\"link\", newdata=scaffold_df, se.fit=T)\n\ndf1 <- scaffold_df %>%\n  left_join(df) %>%\n  rename(cases_actual=cases) %>%\n  mutate(cases_pred=(exp(pred_obj$fit))) %>%\n  mutate(cases_low=(exp(pred_obj$fit - 1.96*pred_obj$se.fit))) %>%\n  mutate(cases_high=(exp(pred_obj$fit + 1.96*pred_obj$se.fit))) %>%\n  mutate(cases_se=pred_obj$se.fit) %>%\n  mutate(cases_link=pred_obj$fit) #need to have this on link scale to bootstrap later\n\ndf2 <- df1 %>%\n  mutate(irrelevant=case_when(\n    covid==1 & month_num < covid_month_num ~ T,\n    TRUE ~ F\n  )) %>%\n  filter(irrelevant!=T) %>%  #get rid of \"COVID\"=yes when time is before COVID (irrelevant predictions)\n  select(-irrelevant) %>%\n  mutate(c_fact=case_when(\n        covid==0 & month_num >= covid_month_num ~ T, \n        T ~ F))\ndf2\n}\n\nmodel2pred_by_continuous <- function(df,m){ \n\n  seq <- seq(0,1, length=100) %>% tibble() # creates 100 data point between start and end month numbers (i.e. \"month num\" becomes nearly continuous)\n\n  expand_months <- df %>% \n  dplyr::select(month_num,covid) %>% \n  tidyr::expand(month_num,covid, seq$.) %>% # now includes 1000 extra points for each level of covid and month_num\n  mutate(month_num=`seq$.` + month_num) %>% # makes a 'continous' variable for month_num (have to keep name month_num so that plotting works as that's the variable name in model)\n  select(-`seq$.`)\n  \n  x <- df %>%\n  dplyr::filter(hiv!=\"unknown\") %>% \n  dplyr::filter(is.na(sex)==F) \n  \n  scaffold_df <- expand_months %>% left_join(x) %>%\n  select(month_num,covid,fac,hiv,sex) %>% \n  tidyr::expand(month_num,covid,fac,hiv,sex) %>% #makes predictions over every level\n  left_join(by%>%select(month,month_num)%>%distinct())\n\npred_obj <- predict(m, type=\"link\", newdata=scaffold_df, se.fit=T)\n\ndf1 <- scaffold_df %>%\n  left_join(df) %>%\n  rename(cases_actual=cases) %>%\n  mutate(cases_pred=(exp(pred_obj$fit))) %>%\n  mutate(cases_low=(exp(pred_obj$fit - 1.96*pred_obj$se.fit))) %>%\n  mutate(cases_high=(exp(pred_obj$fit + 1.96*pred_obj$se.fit))) %>%\n  mutate(cases_se=pred_obj$se.fit) %>%\n  mutate(cases_link=pred_obj$fit) #need to have this on link scale to bootstrap later\n\n\ndf2 <- df1 %>%\n  mutate(irrelevant=case_when(\n    covid==1 & month_num < covid_month_num ~ T,\n    TRUE ~ F\n  )) %>%\n  filter(irrelevant!=T) %>%  #get rid of \"COVID\"=yes when time is before COVID (irrelevant predictions)\n  select(-irrelevant) %>%\n  mutate(c_fact=case_when(\n        covid==0 & month_num >= covid_month_num ~ T, \n        T ~ F))\ndf2\n}\n\n\n\n2. Get data into required format\nNB. “All” is grouped data of total number of TB cases by month.\n\n\ntb_data <- tb_data_group %>% uncount(n) %>% mutate(month=dmy(month)) %>% mutate(fac=factor(fac),\n                                                                                sex = factor(sex),\n                                                                                hiv = factor(hiv))\n\ncens_10yr <- cens %>% mutate(age_gp=case_when(\n  Age==\"[0,4)\" ~ \"0-14\",\n  Age==\"[5,9)\" ~ \"0-14\",\n  Age==\"[10,14)\" ~ \"0-14\",\n  Age==\"[15,19)\" ~ \"15-24\",\n  Age==\"[20,24)\" ~ \"15-24\",\n  Age==\"[25,29)\" ~ \"25-34\",\n  Age==\"[30,34)\" ~ \"25-34\",\n  Age==\"[35,39)\" ~ \"35-44\",\n  Age==\"[40,44)\" ~ \"35-44\",\n  Age==\"[45,49)\" ~ \"45-54\",\n  Age==\"[50,54)\" ~ \"45-54\",\n  Age==\"[55,59)\" ~ \"55-64\",\n  Age==\"[60,64)\" ~ \"55-64\",\n  Age==\"[60,64)\" ~ \"55-64\",\n  Age==\"[65,69)\" ~ \"65+\",\n  Age==\"[70,74)\" ~ \"65+\",\n  Age==\"[75, )\" ~ \"65+\"\n)) %>%\n  group_by(yq, age_gp, Sex) %>%\n  summarise(pop=sum(Population))\n\ncens_all <- cens %>%\n  group_by(yq) %>%\n  summarise(pop=sum(Population)) %>%\n  mutate(`0`=pop,  # so this is a slightly hacky way to get population demoninators for each month (the quarter denominator gets repeated the same three times, not ideal, but it doesn't make any difference.  For plotting the graph - where CNR is a continous variable, I interpolate population to avoid zigzags)\n         `1`=pop,\n         `2`=pop) %>%\n  pivot_longer(c(`0`,`1`,`2`),names_to=\"m\") %>%\n  mutate(m=as.numeric(m)) %>%\n  mutate(month=yq+months(m))\n\n# then this is dataframe lumping all cases togehter\nall <- tb_data %>% \n  group_by(month) %>%\n  summarise(cases=n()) %>% #generates cases per month\n  ungroup() %>%\n  mutate(covid = if_else(month >= covid_date_m, 1L,0L)) %>%\n  arrange(month) %>%\n  mutate(month_num = 1:n()) %>% #create a month_num variable to use in model (rather than actual date, so coefficients make sense)\n  left_join(cens_all) %>%\n  mutate(cnr=(cases/pop)*100000*12) # x12 to get annualised CNRs (NB. children included in both denominator and numerator here)\n\ncovid_month_num <- all %>% ungroup() %>% filter(month==covid_date_m) %>% select(month_num) %>% distinct() %>% as.numeric() # this is to that models stay correct even if choose to change \"covid_date_m\"\n\n\n\nDemographics\n\n\nall %>% summarise(sum(cases))\n\n\n# A tibble: 1 x 1\n  `sum(cases)`\n         <int>\n1        10274\n\ntb_data %>% nrow()\n\n\n[1] 10274\n\nb4covid_m <- all %>% filter(month<=dmy(\"01 March 2020\"))\nb4covid <- tb_data %>% filter(month<=dmy(\"01 March 2020\"))\n\nb4covid_m %>% arrange(cnr) %>% slice_tail(n=1)\n\n\n# A tibble: 1 x 9\n  month      cases covid month_num yq            pop     m  value\n  <date>     <int> <int>     <int> <date>      <dbl> <dbl>  <dbl>\n1 2016-11-01   259     0         6 2016-10-01 7.67e5     1 7.67e5\n# … with 1 more variable: cnr <dbl>\n\nb4covid_m %>% arrange(cnr) %>% slice_head(n=1)\n\n\n# A tibble: 1 x 9\n  month      cases covid month_num yq            pop     m  value\n  <date>     <int> <int>     <int> <date>      <dbl> <dbl>  <dbl>\n1 2019-10-01    95     0        41 2019-10-01 8.33e5     0 8.33e5\n# … with 1 more variable: cnr <dbl>\n\nb4covid %>% nrow()\n\n\n[1] 9199\n\nb4covid %>% tabyl(sex)\n\n\n    sex    n     percent valid_percent\n female 3561 0.387107294     0.3882468\n   male 5611 0.609957604     0.6117532\n   <NA>   27 0.002935102            NA\n\nb4covid %>% tabyl(hiv)\n\n\n      hiv    n    percent valid_percent\n negative 3279 0.35645179     0.3603693\n positive 5820 0.63267746     0.6396307\n     <NA>  100 0.01087075            NA\n\nb4covid %>% tabyl(fac)\n\n\n  fac    n   percent\n   hc 4310 0.4685292\n qech 4889 0.5314708\n\nModel for all TB cases\n\n\nm1_nb <-glm.nb(cases ~ covid + month_num + covid:I(month_num-covid_month_num) + offset(log(pop)), all)\n\nbroom::tidy(m1_nb, exp=T, conf.int = T) %>% gt()\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#xfwdbcsaps .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#xfwdbcsaps .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#xfwdbcsaps .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#xfwdbcsaps .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#xfwdbcsaps .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#xfwdbcsaps .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#xfwdbcsaps .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#xfwdbcsaps .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xfwdbcsaps .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xfwdbcsaps .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#xfwdbcsaps .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#xfwdbcsaps .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#xfwdbcsaps .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#xfwdbcsaps .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xfwdbcsaps .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xfwdbcsaps .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#xfwdbcsaps .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#xfwdbcsaps .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xfwdbcsaps .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#xfwdbcsaps .gt_left {\n  text-align: left;\n}\n\n#xfwdbcsaps .gt_center {\n  text-align: center;\n}\n\n#xfwdbcsaps .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#xfwdbcsaps .gt_font_normal {\n  font-weight: normal;\n}\n\n#xfwdbcsaps .gt_font_bold {\n  font-weight: bold;\n}\n\n#xfwdbcsaps .gt_font_italic {\n  font-style: italic;\n}\n\n#xfwdbcsaps .gt_super {\n  font-size: 65%;\n}\n\n#xfwdbcsaps .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nterm\n      estimate\n      std.error\n      statistic\n      p.value\n      conf.low\n      conf.high\n    (Intercept)\n      0.0003236993\n      0.039372603\n      -204.093577\n      0.000000e+00\n      0.0002996355\n      0.000349907\n    covid\n      0.6403553658\n      0.099365146\n      -4.485798\n      7.264146e-06\n      0.5266200632\n      0.779310109\n    month_num\n      0.9889841145\n      0.001479681\n      -7.486080\n      7.096098e-14\n      0.9861008442\n      0.991873419\n    covid:I(month_num - covid_month_num)\n      1.0439775426\n      0.018821477\n      2.286642\n      2.221673e-02\n      1.0058566856\n      1.083617001\n    \n\ncoeff <- broom::tidy(m1_nb, exp=T, conf.int = T)\n\n1 - coeff[2,2]\n\n\n   estimate\n1 0.3596446\n\n1 - coeff[2,6]\n\n\n   conf.low\n1 0.4733799\n\n1 - coeff[2,7]\n\n\n  conf.high\n1 0.2206899\n\nMake and plot predictions\n\n\nm1_nb_all <- model2pred_pop(all,m1_nb) #this is used to make cumulative predictions\n\nm1_nb_all_continuous <- model2pred_pop_continuous(all,m1_nb) # this is used to plot\n\n# Plotting the whole timescale (treating time as continuous)\n\n# the below bit of code (and 'plot df' is a slightly hack-y way to make 'seq' correspond to real dates to be able to plot)\ncT <- m1_nb_all_continuous %>% filter(c_fact==T) # creating a sequence of dates to match month_num (a continuous numerical value)\nstart_cT <- min(cT$month, na.rm=T)\nend_cT <- max(cT$month, na.rm=T) + months(1) - days(1) # the end date needs to be the END of the month, not the start of the month\nlength_cT <- cT %>% nrow()\nseq_cT <- seq.Date(start_cT,end_cT,length.out = length_cT) \n\ncF <- m1_nb_all_continuous %>% filter(c_fact==F)\nstart_cF <- min(cF$month, na.rm=T)\nend_cF <- max(cF$month, na.rm=T) + months(1) - days(1)\nlength_cF <- cF %>% nrow()\nseq_cF <- seq.Date(start_cF,end_cF,length.out = length_cF) \n\nseq <- c(seq_cF, seq_cT)\n\nplot_df <- m1_nb_all_continuous %>% arrange(c_fact,month_num) %>% cbind(seq) # \"plot df\" has month_num transformed to actual date\n\n# Plot observed values and predictions\nggplot() +\ngeom_rect(aes(xmin=covid_date_m, xmax=dmy(\"31 Dec 2020\"), ymin=-Inf, ymax=Inf), alpha=0.1) +\ngeom_line(aes(y=cnr_pred, x=seq, linetype=\"observed\", color=\"observed\"), data=plot_df %>% filter(c_fact==F)) +\ngeom_ribbon(aes(ymax=cnr_high, ymin=cnr_low, x=seq, fill=\"observed\"), alpha=0.3, data=plot_df %>% filter(c_fact==F)) +\ngeom_line(aes(y=cnr_pred, x=seq, linetype=\"counterfactual\", color=\"counterfactual\"), data=plot_df %>% filter(c_fact==T)) +\ngeom_ribbon(aes(ymax=cnr_high, ymin=cnr_low, x=seq, fill=\"counterfactual\"), alpha=0.3, data=plot_df %>% filter(c_fact==T)) +\n  geom_point(aes(y=cnr_actual, x=month+days(15)), data=plot_df, shape=1) + # plot actual numbers on 15th each month\n  #geom_vline(aes(xintercept=covid_date_m)) +\n  scale_linetype_manual(name=\"legend\",values=c(\"dashed\",\"solid\")) +\n  scale_fill_manual(name=\"legend\", values=c(\"#DE3163\",\"#3FE0D0\")) +\n  scale_color_manual(name=\"legend\", values=c(\"#DE3163\",\"#4286f4\")) +\n  ylab(\"Case Notification Rate (per 100,000 person-years)\") +\n    xlab(\"Month and Year\") +\n   labs(title=\"Blantyre TB Case Notifcation Rate\",\n       caption=\"CNR = Cases TB notified per 100,000 person-years, \\n Dots = observed case notification rate \\n Line = fitted model (95% CI) with both step and slope change due to COVID, see methods for details \\n Shaded area indicates time that COVID emergency was declared in Malawi\") +\n  coord_cartesian(xlim=c(dmy(\"01 April 2016\"), dmy(\"31 Dec 2020\")),ylim=c(0,430)) +\n  scale_x_date(expand = c(0,0)) + \n  theme_bw()  %+replace%\n    theme(legend.title = element_blank())\n\n\n\n\nAnd some examples of predications from model\n\n\nm1_nb_all %>% filter(month==dmy(\"01 March 2020\") | month==dmy(\"01 April 2020\")) %>% select(-month_num, -yq, -m, -pop, -value)\n\n\n# A tibble: 3 x 13\n  covid month      cases_actual cnr_actual cases_pred cnr_pred\n  <int> <date>            <int>      <dbl>      <dbl>    <dbl>\n1     0 2020-03-01          168       240.       163.     233.\n2     0 2020-04-01           NA        NA        162.     231.\n3     1 2020-04-01          107       152.       104.     148.\n# … with 7 more variables: cases_low <dbl>, cases_high <dbl>,\n#   cnr_low <dbl>, cnr_high <dbl>, cases_se <dbl>, cases_link <dbl>,\n#   c_fact <lgl>\n\nm1_nb_all %>% filter(month==dmy(\"01 Nov 2020\") | month==dmy(\"01 Dec 2020\")) %>% select(-month_num, -yq, -m, -pop, -value)\n\n\n# A tibble: 4 x 13\n  covid month      cases_actual cnr_actual cases_pred cnr_pred\n  <int> <date>            <int>      <dbl>      <dbl>    <dbl>\n1     0 2020-11-01           NA        NA        152.     214.\n2     1 2020-11-01          146       205.       132.     185.\n3     0 2020-12-01           NA        NA        151.     211.\n4     1 2020-12-01          111       156.       136.     191.\n# … with 7 more variables: cases_low <dbl>, cases_high <dbl>,\n#   cnr_low <dbl>, cnr_high <dbl>, cases_se <dbl>, cases_link <dbl>,\n#   c_fact <lgl>\n\nModel checking\n\n\nres1 <- residuals(m1_nb,type=\"deviance\")\nplot(all$month_num,res1,ylim=c(-5,10),pch=19,cex=0.7,col=grey(0.6),\n     main=\"Residuals over time\",ylab=\"Deviance residuals\",xlab=\"Date\")\n\n\n\n# Further check for autocorrelation by examining the autocorrelation and\n#   partial autocorrelation functions\nacf(res1)\n\n\n\npacf(res1)\n\n\n\n\nUse model to illustrate “missing cases” / missing CNR. Use parametric bootstrapping to get confidence intervals\n\n\n# c_fact = FALSE (from April to December) is a modelled estimate (with a CI), BUT, the model estimate and the actual observed value (i.e. 505 cases) is identical.  So going to use this as a constant, without a distribution.\n\nm1_nb_covidt <- m1_nb_all %>% filter(month>=covid_date_m) #only interested in time period after \"COVID time\"\n\n#NB. This is covid_no when you just return the modelled cases (on the link scale 'cases_link'); the next function replaces cases_link with a distribution with mean 'cases_link' and st. dev 'st.error' of fir\n\ncovid_no <- m1_nb_covidt %>% filter(c_fact==T) %>%\n  summarise(n_nocovid = sum(\n    exp(\n      cases_link\n      )))\n\nboot_fx <- function(df){\ncovid_yes <- df %>% filter(c_fact==F) %>%\n  summarise(n_actual = sum(cases_actual))\n\ncovid_no <- df %>% filter(c_fact==T) %>%\n  summarise(n_nocovid = sum(\n    exp(\n      as.numeric(pmap(list(cases_link,cases_se), function(mu, sd) rnorm(1, mu, sd))) \n      )))\n\nabs_diff <- covid_no - covid_yes\nrel_diff <- (covid_no - covid_yes) / covid_no\n\nas.numeric(c(covid_yes,covid_no,abs_diff,rel_diff))\n}\n\n# run once to check\nboot_fx(m1_nb_covidt) # col 1 = observed cases, col 2 = predicted under counterfactual, col 3 = abs difference, col 4 = rel diff (one replicate)\n\n\n[1] 1075.0000000 1436.9131081  361.9131081    0.2518685\n\n# now run 1000 times\nx <- boot(m1_nb_covidt,boot_fx,R=1000,sim=\"parametric\")\n\n# Plot output for predicted number of cases under counterfactual no-COVID\nplot(x, index=2)\n\n\n\nsd_x <- c(sd(x$t[,1]),sd(x$t[,2]),sd(x$t[,3]),sd(x$t[,4])) # boot command output is a vector of estimate for worst / actual / averted\n\n\n\n\n\n# Now generate estimates with CI (using point estimate from model (cases_pred) rather than mean of boot output, although should be v. similar)\ntable_fx <- function(df,sd){\n  covid_yes <- df %>% filter(c_fact==F) %>%\n  summarise(n_actual = sum(cases_actual)) %>%\n    mutate(str=n_actual)\n  \n  covid_no <- df %>% filter(c_fact==T) %>%\n  summarise(n = sum(\n    exp(\n      cases_link\n      ))) %>%\n    mutate(nhi = n + 1.96*sd[2],\n            nlo = n - 1.96*sd[2]) %>%\n    mutate(str = paste0(\n      round(n,digits=0),\" (\",round(nlo,digits=0),\" to \",round(nhi,digits=0),\")\"\n    ))\n  \n  abs_diff <- tibble(covid_no$n - covid_yes) %>%\n    rename(n=n_actual) %>%\n    mutate(\n    nhi = n + 1.96*sd[3],\n    nlo = n - 1.96*sd[3]) %>%\n  mutate(str = paste0(\n      round(n,digits=0),\" (\",round(nlo,digits=0),\" to \",round(nhi,digits=0),\")\"\n  ))\n  \n  rel_diff <- tibble((covid_no$n - covid_yes) / covid_no$n) %>%\n    rename(n=n_actual) %>%\n    mutate(\n    nhi = n + 1.96*sd[4],\n    nlo = n - 1.96*sd[4]) %>%\n  mutate(str = paste0(\n      round(n,digits=3),\" (\",round(nlo,digits=3),\" to \",round(nhi,digits=3),\")\"\n  ))\n  \n  cbind(covid_yes$str, covid_no$str, abs_diff$str, rel_diff$str) %>% as_tibble() %>%\n    rename(covid_yes=V1,\n           covid_no=V2,\n           rel.diff = V3,\n           abs.diff = V4)\n}\n\ntable_fx(m1_nb_covidt,sd_x) %>% gt()\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#dxdyghvegg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#dxdyghvegg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#dxdyghvegg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#dxdyghvegg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#dxdyghvegg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#dxdyghvegg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#dxdyghvegg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#dxdyghvegg .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#dxdyghvegg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#dxdyghvegg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#dxdyghvegg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#dxdyghvegg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#dxdyghvegg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#dxdyghvegg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxdyghvegg .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxdyghvegg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#dxdyghvegg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#dxdyghvegg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#dxdyghvegg .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#dxdyghvegg .gt_left {\n  text-align: left;\n}\n\n#dxdyghvegg .gt_center {\n  text-align: center;\n}\n\n#dxdyghvegg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#dxdyghvegg .gt_font_normal {\n  font-weight: normal;\n}\n\n#dxdyghvegg .gt_font_bold {\n  font-weight: bold;\n}\n\n#dxdyghvegg .gt_font_italic {\n  font-style: italic;\n}\n\n#dxdyghvegg .gt_super {\n  font-size: 65%;\n}\n\n#dxdyghvegg .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\ncovid_yes\n      covid_no\n      rel.diff\n      abs.diff\n    1075\n      1408 (1367 to 1449)\n      333 (292 to 374)\n      0.237 (0.215 to 0.259)\n    \n\nm1_nb_covidt %>% filter(c_fact==T) %>% summarise(mean=mean(cnr_pred))\n\n\n# A tibble: 1 x 1\n   mean\n  <dbl>\n1  221.\n\n3. Now to break this down by demographics\nHealth centre, sex and HIV status. Cases rather than CNR, as don’t have denominators for health centre or HIV status\n\n\n# Impute the small number of missing variables\ntb_data_mids <- mice(\n  data=tb_data,\n  m=1, #just one imputation as missing data v. small\n  method=\"pmm\"\n)\n\n\n\n iter imp variable\n  1   1  sex  hiv\n  2   1  sex  hiv\n  3   1  sex  hiv\n  4   1  sex  hiv\n  5   1  sex  hiv\n\ntb_data_imp <- complete(tb_data_mids, action=\"long\") %>% select(-.imp, -.id) #complete data set\n\nby <- tb_data_imp %>%\n    group_by(month,sex,hiv,fac) %>%\n    summarise(cases=n()) %>%\n    ungroup() %>%\n    mutate(covid = if_else(month >= covid_date_m, 1L,0L)) %>%\n    arrange(month) %>%\n    group_by(month) %>%\n    mutate(month_num = cur_group_id()) %>%\n    ungroup()\n\nm2 <-glm.nb(cases ~ sex + hiv + fac + sex:hiv:fac + sex:hiv:fac:covid + sex:hiv:fac:month_num + sex:hiv:fac:covid:I(month_num-covid_month_num), data=by) \n\ntidy(m2, exp=T, conf.int = T) %>% gt()\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#qyuadfujnx .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#qyuadfujnx .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#qyuadfujnx .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#qyuadfujnx .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#qyuadfujnx .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#qyuadfujnx .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#qyuadfujnx .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#qyuadfujnx .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#qyuadfujnx .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#qyuadfujnx .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#qyuadfujnx .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#qyuadfujnx .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#qyuadfujnx .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#qyuadfujnx .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qyuadfujnx .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qyuadfujnx .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#qyuadfujnx .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#qyuadfujnx .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qyuadfujnx .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#qyuadfujnx .gt_left {\n  text-align: left;\n}\n\n#qyuadfujnx .gt_center {\n  text-align: center;\n}\n\n#qyuadfujnx .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#qyuadfujnx .gt_font_normal {\n  font-weight: normal;\n}\n\n#qyuadfujnx .gt_font_bold {\n  font-weight: bold;\n}\n\n#qyuadfujnx .gt_font_italic {\n  font-style: italic;\n}\n\n#qyuadfujnx .gt_super {\n  font-size: 65%;\n}\n\n#qyuadfujnx .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nterm\n      estimate\n      std.error\n      statistic\n      p.value\n      conf.low\n      conf.high\n    (Intercept)\n      12.1403992\n      0.193562493\n      12.8978431\n      4.628719e-38\n      8.2823493\n      17.7750608\n    sexmale\n      1.4427315\n      0.101455622\n      3.6127936\n      3.029158e-04\n      1.1803007\n      1.7639166\n    hivpositive\n      2.3804911\n      0.109814908\n      7.8978969\n      2.836487e-15\n      1.9202845\n      2.9535481\n    facqech\n      1.4145021\n      0.101398175\n      3.4199590\n      6.263058e-04\n      1.1576557\n      1.7287204\n    sexfemale:hivnegative:fachc\n      0.9763552\n      0.218483297\n      -0.1095222\n      9.127883e-01\n      0.6346182\n      1.5023798\n    sexmale:hivnegative:fachc\n      1.4557433\n      0.154401593\n      2.4320775\n      1.501249e-02\n      1.0760573\n      1.9698072\n    sexfemale:hivpositive:fachc\n      0.8835733\n      0.151010167\n      -0.8196869\n      4.123946e-01\n      0.6553912\n      1.1909455\n    sexmale:hivpositive:fachc\n      NA\n      NA\n      NA\n      NA\n      NA\n      NA\n    sexfemale:hivnegative:facqech\n      0.9829549\n      0.163995988\n      -0.1048319\n      9.165092e-01\n      0.7118150\n      1.3566749\n    sexmale:hivnegative:facqech\n      NA\n      NA\n      NA\n      NA\n      NA\n      NA\n    sexfemale:hivpositive:facqech\n      NA\n      NA\n      NA\n      NA\n      NA\n      NA\n    sexmale:hivpositive:facqech\n      NA\n      NA\n      NA\n      NA\n      NA\n      NA\n    sexfemale:hivnegative:fachc:covid\n      0.5458092\n      0.273641111\n      -2.2127002\n      2.691832e-02\n      0.3126395\n      0.9237274\n    sexmale:hivnegative:fachc:covid\n      0.6376588\n      0.192928618\n      -2.3322195\n      1.968915e-02\n      0.4351711\n      0.9299147\n    sexfemale:hivpositive:fachc:covid\n      0.5761861\n      0.250705398\n      -2.1990933\n      2.787129e-02\n      0.3488412\n      0.9296577\n    sexmale:hivpositive:fachc:covid\n      0.6704171\n      0.202049675\n      -1.9789943\n      4.781665e-02\n      0.4478913\n      0.9960389\n    sexfemale:hivnegative:facqech:covid\n      0.5784814\n      0.304373175\n      -1.7982823\n      7.213228e-02\n      0.3097904\n      1.0334361\n    sexmale:hivnegative:facqech:covid\n      0.6362867\n      0.243444834\n      -1.8571192\n      6.329419e-02\n      0.3901032\n      1.0168502\n    sexfemale:hivpositive:facqech:covid\n      0.6764718\n      0.197251707\n      -1.9815523\n      4.752938e-02\n      0.4560302\n      0.9971969\n    sexmale:hivpositive:facqech:covid\n      0.6838755\n      0.187289858\n      -2.0288303\n      4.247558e-02\n      0.4726530\n      0.9853610\n    sexfemale:hivnegative:fachc:month_num\n      1.0033917\n      0.003704681\n      0.9139585\n      3.607387e-01\n      0.9960828\n      1.0107640\n    sexmale:hivnegative:fachc:month_num\n      1.0045060\n      0.002910011\n      1.5449824\n      1.223505e-01\n      0.9988816\n      1.0101698\n    sexfemale:hivpositive:fachc:month_num\n      0.9882730\n      0.003247471\n      -3.6324516\n      2.807412e-04\n      0.9819263\n      0.9946314\n    sexmale:hivpositive:fachc:month_num\n      0.9895278\n      0.002816898\n      -3.7372232\n      1.860638e-04\n      0.9840158\n      0.9950544\n    sexfemale:hivnegative:facqech:month_num\n      0.9852292\n      0.003821823\n      -3.8936774\n      9.873595e-05\n      0.9778238\n      0.9926386\n    sexmale:hivnegative:facqech:month_num\n      0.9874961\n      0.003297709\n      -3.8155925\n      1.358566e-04\n      0.9811656\n      0.9938364\n    sexfemale:hivpositive:facqech:month_num\n      0.9906978\n      0.002810066\n      -3.3257988\n      8.816554e-04\n      0.9851754\n      0.9962363\n    sexmale:hivpositive:facqech:month_num\n      0.9852521\n      0.002671803\n      -5.5609378\n      2.683288e-08\n      0.9800362\n      0.9904763\n    sexfemale:hivnegative:fachc:covid:I(month_num - covid_month_num)\n      0.9640896\n      0.055520665\n      -0.6586925\n      5.100933e-01\n      0.8630069\n      1.0759028\n    sexmale:hivnegative:fachc:covid:I(month_num - covid_month_num)\n      1.0012730\n      0.037075187\n      0.0343136\n      9.726271e-01\n      0.9305042\n      1.0775086\n    sexfemale:hivpositive:fachc:covid:I(month_num - covid_month_num)\n      1.0511029\n      0.047585309\n      1.0473819\n      2.949235e-01\n      0.9586165\n      1.1535366\n    sexmale:hivpositive:fachc:covid:I(month_num - covid_month_num)\n      1.0115898\n      0.039205760\n      0.2939141\n      7.688236e-01\n      0.9358823\n      1.0934660\n    sexfemale:hivnegative:facqech:covid:I(month_num - covid_month_num)\n      1.0979419\n      0.055719744\n      1.6769184\n      9.355844e-02\n      0.9839899\n      1.2281314\n    sexmale:hivnegative:facqech:covid:I(month_num - covid_month_num)\n      1.0937831\n      0.044583945\n      2.0106441\n      4.436306e-02\n      1.0023625\n      1.1952486\n    sexfemale:hivpositive:facqech:covid:I(month_num - covid_month_num)\n      1.0368397\n      0.037478779\n      0.9652756\n      3.344068e-01\n      0.9623486\n      1.1174640\n    sexmale:hivpositive:facqech:covid:I(month_num - covid_month_num)\n      1.0836234\n      0.034788754\n      2.3085166\n      2.097042e-02\n      1.0126745\n      1.1602699\n    \n\ncoeffs2 <- tidy(m2, exp=T, conf.int = T)\n\n\n\nCheck model\n\n\nres2 <- residuals(m2,type=\"deviance\")\nplot(by$month_num,res2,ylim=c(-5,10),pch=19,cex=0.7,col=grey(0.6),\n     main=\"Residuals over time\",ylab=\"Deviance residuals\",xlab=\"Date\")\n\n\n\n# Further check for autocorrelation by examining the autocorrelation and\n#   partial autocorrelation functions\nacf(res2)\n\n\n\npacf(res2)\n\n\n\n\nMake predictions and plot them\n\n\nm2_by <- model2pred_by(by,m2)\nm2_by_continuous <- model2pred_by_continuous(by,m2)\n\n# the below bit of code (and 'plot df' is a slightly hack-y way to make 'seq' correspond to real dates to be able to plot)\ncTb <- m2_by_continuous %>% filter(c_fact==T) # creating a sequence of dates to match month_num (a continuous numerical value)\nstart_cTb <- min(cTb$month, na.rm=T)\nend_cTb <- max(cTb$month, na.rm=T) + months(1) - days(1) # the end date needs to be the END of the month, not the start of the month\nlength_cTb <- cTb %>% nrow()\nseq_cTb <- seq.Date(start_cTb,end_cTb,length.out = length_cTb) \n\ncFb <- m2_by_continuous %>% filter(c_fact==F)\nstart_cFb <- min(cFb$month, na.rm=T)\nend_cFb <- max(cFb$month, na.rm=T) + months(1) - days(1)\nlength_cFb <- cFb %>% nrow()\nseq_cFb <- seq.Date(start_cFb,end_cFb,length.out = length_cFb) \n\nseqb <- c(seq_cFb, seq_cTb)\n\nplot_df_by <- m2_by_continuous %>% arrange(c_fact,month_num) %>% cbind(seqb) # \"plot df\" has month_num transformed to actual date\n\n\nlabel_hc <- c( #labels for plot\n  hc = \"Health Centre\",\n  qech = \"Queen Elizabeth Central Hospital\"\n)\n\nlabel_hiv <- c( #labels for plot\n  negative=\"HIV Negative\",\n  positive=\"HIV Positive\"\n)\n\nggplot() +\n  geom_line(aes(y=cases_pred,x=seqb, color=sex), data=plot_df_by%>%filter(c_fact==F)) +\n  geom_ribbon(aes(ymax=cases_high, ymin=cases_low, x=seqb, fill=sex), alpha=0.3, data=plot_df_by %>% filter(c_fact==F)) +\n  geom_point(aes(y=cases_actual, x=month+days(15), color=sex), size=0.5, alpha=0.7, data=plot_df_by%>%filter(c_fact==F))+\n  geom_vline(xintercept=covid_date_m, linetype=\"dotted\") +\n  scale_fill_manual(name=\"legend\", values=c(\"#E58601\",\"#B40F20\")) +\n  scale_color_manual(name=\"legend\", values=c(\"#E58601\",\"#B40F20\")) +\n  ylab(\"Number of TB cases notified per month\") +\n  xlab(\"Month and Year\") +\n  labs(title=\"\",\n       caption=\"Dots = observed number of cases \\n Line = fitted model (95% CI) with both step and slope change due to COVID, see methods for details \\n Vertical lines indicates time that COVID emergency was declared in Malawi\") +\n  facet_grid(hiv~fac, \n             labeller=labeller(\n               fac=label_hc,\n               hiv=label_hiv\n             )) +\n  theme_bw() %+replace%\n    theme(legend.title = element_blank())\n\n\n\n\nUse model to make predictions by number\n\n\n# Point estimate of missing\nm2_by %>% group_by(month,c_fact) %>% summarise(n=sum(cases_pred)) %>% filter(month>=covid_date_m) %>% group_by(c_fact) %>% summarise(n=sum(n)) \n\n\n# A tibble: 2 x 2\n  c_fact     n\n  <lgl>  <dbl>\n1 FALSE  1075.\n2 TRUE   1427.\n\ny <- m2_by %>% group_by(month,c_fact) %>% summarise(n=sum(cases_pred)) %>% filter(month>=covid_date_m) %>% group_by(c_fact) %>% summarise(n=sum(n)) \ny[2,2] - y[1,2] \n\n\n         n\n1 351.9159\n\n# Boot-strappable function\nm2_by_covidt <- m2_by %>% filter(month>=covid_date_m)\n\nboot_fx_by <- function(df,var){\n  var <- enquo(var)\n\n  covid_yes <- df %>% \n    filter(c_fact==F) %>%\n    group_by(!!var) %>%\n    summarise(\n      n=sum(\n        cases_actual\n      ))\n \n  covid_no <- df %>%\n    filter(c_fact==T) %>%\n    group_by(!!var) %>%\n    summarise(\n      n=sum(\n        cases_pred\n      ))  \n  \n  abs_diff <- covid_no$n - covid_yes$n\n  rel_diff <- (covid_no$n - covid_yes$n) / covid_no$n\n  \n  covid_yes %>% left_join(covid_no,by=quo_name(var)) %>% cbind(abs_diff) %>% cbind(rel_diff) %>%\n    rename(covid_yes=n.x,\n           covid_no=n.y)\n}\n\n# Run each of these once to have a look\nboot_fx_by(m2_by_covidt,sex)\n\n\n     sex covid_yes covid_no abs_diff  rel_diff\n1 female       389 552.4449 163.4449 0.2958574\n2   male       686 874.4962 188.4962 0.2155484\n\nboot_fx_by(m2_by_covidt,hiv)\n\n\n       hiv covid_yes covid_no abs_diff  rel_diff\n1 negative       415 604.0436 189.0436 0.3129635\n2 positive       660 822.8976 162.8976 0.1979561\n\nboot_fx_by(m2_by_covidt,fac)\n\n\n   fac covid_yes covid_no  abs_diff  rel_diff\n1   hc       488 760.8550 272.85500 0.3586163\n2 qech       587 666.0862  79.08618 0.1187327\n\n\n\n# Annoyingly, I can't work out how to pass second variable within my function to \"boot\" (ie. can't add a var).\n# Go back to original boot function\n\n# Boot sex\n\nmale <- m2_by_covidt %>% filter(sex==\"male\")\nfemale <- m2_by_covidt %>% filter(sex==\"female\")\nhc <- m2_by_covidt %>% filter(fac==\"hc\")\nqech <- m2_by_covidt %>% filter(fac==\"qech\")\nhivpos <- m2_by_covidt %>% filter(hiv==\"positive\")\nhivneg <- m2_by_covidt %>% filter(hiv==\"negative\")\n\n\n\n# Then boot each one\nmale_res <- boot(male,boot_fx,R=1000,sim=\"parametric\")\nfemale_res <- boot(female,boot_fx,R=1000,sim=\"parametric\")\nhc_res <- boot(hc,boot_fx,R=1000,sim=\"parametric\")\nqech_res <- boot(qech,boot_fx,R=1000,sim=\"parametric\")\nhivpos_res <- boot(hivpos,boot_fx,R=1000,sim=\"parametric\")\nhivneg_res <- boot(hivneg,boot_fx,R=1000,sim=\"parametric\")\nall_res <- boot(m2_by_covidt, boot_fx, R=1000, sim=\"parametric\")\n\n#Get st. dev\nboot_sd <- function(var){\n  c(sd(var$t[,1]),sd(var$t[,2]),sd(var$t[,3]),sd(var$t[,4]))\n}\n\nsd_male <- boot_sd(male_res)\nsd_female <- boot_sd(female_res)\nsd_hc <- boot_sd(hc_res)\nsd_qech <- boot_sd(qech_res)\nsd_hivpos <- boot_sd(hivpos_res)\nsd_hivneg <- boot_sd(hivneg_res)\nsd_all <- boot_sd(all_res)\n\ntable_fx_2 <- function(df,df_sd){ #not using boot function results, as get the point estimate direct from model; but using boot st. devs\n  covid_yes <- df %>% filter(c_fact==F) %>%\n  summarise(n_actual = sum(cases_actual)) %>%\n    mutate(str=n_actual)\n  \n  covid_no <- df %>% filter(c_fact==T) %>%\n  summarise(n = sum(\n    exp(\n      cases_link\n      ))) %>%\n    mutate(nhi = n + 1.96*df_sd[2],\n            nlo = n - 1.96*df_sd[2]) %>%\n    mutate(str = paste0(\n      round(n,digits=0),\" (\",round(nlo,digits=0),\" to \",round(nhi,digits=0),\")\"\n    ))\n  \n  abs_diff <- tibble(covid_no$n - covid_yes) %>%\n    rename(n=n_actual) %>%\n    mutate(\n    nhi = n + 1.96*df_sd[3],\n    nlo = n - 1.96*df_sd[3]) %>%\n  mutate(str = paste0(\n      round(n,digits=0),\" (\",round(nlo,digits=0),\" to \",round(nhi,digits=0),\")\"\n  ))\n  \n  rel_diff <- tibble((covid_no$n - covid_yes) / covid_no$n) %>%\n    rename(n=n_actual) %>%\n    mutate(\n    nhi = n + 1.96*df_sd[4],\n    nlo = n - 1.96*df_sd[4]) %>%\n  mutate(str = paste0(\n      round(n,digits=3),\" (\",round(nlo,digits=3),\" to \",round(nhi,digits=3),\")\"\n  ))\n  \n  cbind(covid_yes$str, covid_no$str, abs_diff$str, rel_diff$str) %>% as_tibble() %>%\n    rename(covid_yes=V1,\n           covid_no=V2,\n           abs.diff = V3,\n          rel.diff = V4)\n}\n\ntable_fx_2(male,sd_male) %>%\n  bind_rows(table_fx_2(female,sd_female)) %>%\n  bind_rows(table_fx_2(hc,sd_hc)) %>%\n  bind_rows(table_fx_2(qech,sd_qech)) %>%\n  bind_rows(table_fx_2(hivpos,sd_hivpos)) %>%\n  bind_rows(table_fx_2(hivneg,sd_hivneg)) %>%\n  cbind(c(\"male\",\"female\",\"hc\",\"qech\",\"hivpos\",\"hivneg\")) %>% \n  rename(group = `c(\\\"male\\\", \\\"female\\\", \\\"hc\\\", \\\"qech\\\", \\\"hivpos\\\", \\\"hivneg\\\")`) %>%\n  select(group,everything()) %>%\n  gt()\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#nzwrrypuyb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#nzwrrypuyb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#nzwrrypuyb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nzwrrypuyb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nzwrrypuyb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nzwrrypuyb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nzwrrypuyb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nzwrrypuyb .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nzwrrypuyb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nzwrrypuyb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nzwrrypuyb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nzwrrypuyb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nzwrrypuyb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#nzwrrypuyb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzwrrypuyb .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzwrrypuyb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#nzwrrypuyb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#nzwrrypuyb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nzwrrypuyb .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#nzwrrypuyb .gt_left {\n  text-align: left;\n}\n\n#nzwrrypuyb .gt_center {\n  text-align: center;\n}\n\n#nzwrrypuyb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nzwrrypuyb .gt_font_normal {\n  font-weight: normal;\n}\n\n#nzwrrypuyb .gt_font_bold {\n  font-weight: bold;\n}\n\n#nzwrrypuyb .gt_font_italic {\n  font-style: italic;\n}\n\n#nzwrrypuyb .gt_super {\n  font-size: 65%;\n}\n\n#nzwrrypuyb .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\ngroup\n      covid_yes\n      covid_no\n      abs.diff\n      rel.diff\n    male\n      686\n      874 (848 to 901)\n      188 (162 to 215)\n      0.216 (0.192 to 0.239)\n    female\n      389\n      552 (533 to 572)\n      163 (144 to 183)\n      0.296 (0.272 to 0.32)\n    hc\n      488\n      761 (737 to 785)\n      273 (249 to 297)\n      0.359 (0.338 to 0.379)\n    qech\n      587\n      666 (644 to 688)\n      79 (57 to 101)\n      0.119 (0.09 to 0.148)\n    hivpos\n      660\n      823 (799 to 847)\n      163 (139 to 187)\n      0.198 (0.175 to 0.221)\n    hivneg\n      415\n      604 (582 to 626)\n      189 (167 to 211)\n      0.313 (0.288 to 0.338)\n    \n\n\n\n# Table for everyone\ntable_fx_2(m2_by_covidt,sd_all) %>% gt()\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#gkbbvbbpjm .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gkbbvbbpjm .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gkbbvbbpjm .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gkbbvbbpjm .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gkbbvbbpjm .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gkbbvbbpjm .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gkbbvbbpjm .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gkbbvbbpjm .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gkbbvbbpjm .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gkbbvbbpjm .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gkbbvbbpjm .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gkbbvbbpjm .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gkbbvbbpjm .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#gkbbvbbpjm .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gkbbvbbpjm .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gkbbvbbpjm .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#gkbbvbbpjm .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#gkbbvbbpjm .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gkbbvbbpjm .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#gkbbvbbpjm .gt_left {\n  text-align: left;\n}\n\n#gkbbvbbpjm .gt_center {\n  text-align: center;\n}\n\n#gkbbvbbpjm .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gkbbvbbpjm .gt_font_normal {\n  font-weight: normal;\n}\n\n#gkbbvbbpjm .gt_font_bold {\n  font-weight: bold;\n}\n\n#gkbbvbbpjm .gt_font_italic {\n  font-style: italic;\n}\n\n#gkbbvbbpjm .gt_super {\n  font-size: 65%;\n}\n\n#gkbbvbbpjm .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\ncovid_yes\n      covid_no\n      abs.diff\n      rel.diff\n    1075\n      1427 (1394 to 1460)\n      352 (319 to 385)\n      0.247 (0.229 to 0.264)\n    \n\nSensitivity analysis\n\n\n# Harmonics for seasons\nsens1 <- glm.nb(cases ~ offset(log(pop)) + covid*month_num + harmonic(month_num,2,12), all)  # have to use month_num here as I can't get 'harmonic' to work sensibly with dates\n\ns1_all <- model2pred_pop(all,sens1)\n\nplot_all_fx <- function(df){\nggplot() +\ngeom_rect(aes(xmin=covid_date_m, xmax=dmy(\"15 Dec 2020\"), ymin=-Inf, ymax=Inf), alpha=0.1) +\ngeom_line(aes(y=cnr_pred, x=month, linetype=\"observed\", color=\"observed\"), data=df %>% filter(c_fact==F)) +\ngeom_ribbon(aes(ymax=cnr_high, ymin=cnr_low, x=month, fill=\"observed\"), alpha=0.3, data=df %>% filter(c_fact==F)) +\ngeom_line(aes(y=cnr_pred, x=month, linetype=\"counterfactual\", color=\"counterfactual\"), data=df %>% filter(c_fact==T)) +\ngeom_ribbon(aes(ymax=cnr_high, ymin=cnr_low, x=month, fill=\"counterfactual\"), alpha=0.3, data=df %>% filter(c_fact==T)) +\n  geom_point(aes(y=cnr_actual, x=month+days(15)), data=plot_df, shape=1) + # plot actual numbers on 15th each month\n  #geom_vline(aes(xintercept=covid_date_m)) +\n  scale_linetype_manual(name=\"legend\",values=c(\"dashed\",\"solid\")) +\n  scale_fill_manual(name=\"legend\", values=c(\"#DE3163\",\"#3FE0D0\")) +\n  scale_color_manual(name=\"legend\", values=c(\"#DE3163\",\"#4286f4\")) +\n  ylab(\"Case Notification Rate (per 100,000 person-years)\") +\n    xlab(\"Month and Year\") +\n   labs(title=\"Blantyre TB Case Notifcation Rate\",\n       caption=\"CNR = Cases TB notified per 100,000 person-years, \\n Dots = observed case notification rate \\n Line = fitted model (95% CI) with both step and slope change due to COVID, see methods for details \\n Shaded area indicates time that COVID emergency was declared in Malawi\") +\n  coord_cartesian(xlim=c(dmy(\"01 April 2016\"), dmy(\"15 Dec 2020\")),ylim=c(0,430)) +\n  scale_x_date(expand = c(0,0)) + \n  theme_bw()  %+replace%\n    theme(legend.title = element_blank())\n}\n\n\nplot_all_fx(s1_all)\n\n\n\ns1_covidt <- s1_all %>% filter(month>=covid_date_m) \nboot_fx(s1_covidt)\n\n\n[1] 1075.0000000 1357.6761402  282.6761402    0.2082059\n\nest_s1 <- boot(s1_covidt,boot_fx,R=100,sim=\"parametric\")\nsd_s1 <- c(sd(est_s1$t[,1]),sd(est_s1$t[,2]),sd(est_s1$t[,3]),sd(est_s1$t[,4])) # boot command output is a vector of estimate for worst / actual / averted\n\ntable_fx(s1_covidt,sd_s1)\n\n\n# A tibble: 1 x 4\n  covid_yes covid_no            rel.diff         abs.diff             \n  <chr>     <chr>               <chr>            <chr>                \n1 1075      1387 (1335 to 1439) 312 (260 to 364) 0.225 (0.196 to 0.25…\n\ntable_fx(m1_nb_covidt,sd_x)\n\n\n# A tibble: 1 x 4\n  covid_yes covid_no            rel.diff         abs.diff             \n  <chr>     <chr>               <chr>            <chr>                \n1 1075      1408 (1367 to 1449) 333 (292 to 374) 0.237 (0.215 to 0.25…\n\nm1_nb$aic\n\n\n[1] 519.1786\n\nsens1$aic #actually a little higher, no serious difference\n\n\n[1] 523.2373\n\n333/ all %>% filter(month>=dmy(\"01 April 2020\")) %>% summarise(m=median(pop)) *100000\n\n\n         m\n1 39.16637\n\n\n\n\n",
      "last_modified": "2021-03-09T12:32:07+02:00"
    },
    {
      "path": "index.html",
      "title": "TB COVID Blantyre",
      "description": "A website for our code and data about impact of COVID on TB notifications in Blantyre\n",
      "author": [],
      "contents": "\nThis is a website and github repository for our project about impact of COVID-19 on TB notifications in Blantyre, Malawi.\nThe github repo is at https://github.com/rachaelmburke/tbcovidblantyre\nHere you will find\nR markdown file with analyses\nKnitted R markdown file (same as the one on this webpage)\n.csv file of monthly total TB case notifications from June 2016 until December 2020\n.rdata file of modelled quarterly Blantyre population by age and sex (based on Govt of Malawi censuses in 2008 and 2018, with thanks to Chu Chang Ku)\n\n\n\n",
      "last_modified": "2021-03-09T12:32:07+02:00"
    }
  ],
  "collections": []
}
